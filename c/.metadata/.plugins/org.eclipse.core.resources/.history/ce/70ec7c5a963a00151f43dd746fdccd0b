/*
 ============================================================================
 Name        : codeVita.c
 Author      : 
 Version     :
 Copyright   : Your copyright notice
 Description : Hello World in C, Ansi-style
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>

#define MAX 350
int check( int n, int r);
int isReachable(int (*path)[], int n, int x1, int y1, int x2, int y2);
int maze[MAX][MAX], rat[MAX][MAX];
int main(void) {
	int r, i, j, n;

	printf("Enter the size of maze\n");
	scanf("%d",&n);
	printf("Enter the cells of maze\n");
	for(i=0; i< n; i++){
		for(j=0; j<n; j++){
			scanf("%d",&maze[i][j]);
		}
	}
	printf("\nEnter the no of rats\n");
	scanf("%d",&r);
	printf("\nEnter the rat's positions\n");
	for(i=0; i<r; i++){
		scanf("%d %d",&rat[i][0], &rat[i][1]);
	}
	int flag = 0 ;
	flag = check(n,r);
	if(flag){
		printf("YES");
	}else{
		printf("NO");
	}
	return EXIT_SUCCESS;
}

int check(int n, int r){
	int path[MAX][MAX] ,x,y;
	int reached[r][r];
	int i =0,j =0;
	int flag = 0;
	for(i = 0 ;i<r; i++){
		for(j=i+1; j<r; j++){
			for(x=0; x <n ; x++){
				for(y=0; y<n; y++){
					path[x][y] = 0;
				}
			}
			flag = isReachable(path, n-1, rat[i][0], rat[i][1], rat[j][0], rat[j][1]);
			if(flag){
				puts("hel");
				reached[i][j] = 1;
			}
			else {
				reached[i][j] = 0;
			}
		}
	}
	for(i=0; i<r; i++){
		for(j=i+1; j<r; j++){
			if(reached[i][j] == 0){
				return 0;
			}
		}
	}
	return 1;
}

int isReachable(int (path)[MAX][MAX], int n, int x1, int y1, int x2, int y2){
	if(x1 == x2 && y1 == y2){
		return 1;
	}
	if(y1<n && path[x1][y1+1]== 0 && maze[x1][y1+1] == 1){
		y1++;puts("he1l");
		path[x1][y1] = 1;
		return isReachable(path, n, x1, y1, x2, y2);
	}
	if(x1<n && path[x1+1][y1]== 0 && maze[x1+1][y1] == 1){
		x1++;puts("he2l");
		path[x1][y1] = 1;
		return isReachable(path,  n, x1, y1, x2, y2);
	}
	if(y1>0 && path[x1][y1-1]== 0 && maze[x1][y1-1] == 1){
		y1--;puts("he3l");
		path[x1][y1] = 1;
		return isReachable(path, n, x1, y1, x2, y2);
	}
	if(x1>0 && path[x1-1][y1]== 0 && maze[x1-1][y1] == 1){
		x1--;puts("he4l");
		path[x1][y1] = 1;
		return isReachable(path, n, x1, y1, x2, y2);
	}
	return 0;
}
